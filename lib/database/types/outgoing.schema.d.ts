/* eslint-disable */
/**
 * This file was automatically generated by json-schema-to-typescript.
 * DO NOT MODIFY IT BY HAND. Instead, modify the source JSONSchema file,
 * and run json-schema-to-typescript to regenerate this file.
 */

export type DeployResult =
  | {
      ok: "success";
      data: FromDeploy;
    }
  | {
      ok: "err";
      data: FromDeployErr;
    };
export type FromDeploy =
  | {
      __type: "status";
      data: DeploymentStatus;
    }
  | {
      __type: "chall_name_list";
      data: string[];
    };
export type Status = "started" | "building" | "pulling" | "pushing" | "uploading" | "success" | "failure" | "unknown";
export type FromDeployErr =
  | ("BadSend" | "BadResponse" | "DbError")
  | {
      DeployServer: {
        code: number;
        body: number[];
      };
    };
export type DiscordResult =
  | {
      ok: "success";
      data: FromDiscord;
    }
  | {
      ok: "err";
      data: FromDiscordErr;
    };
export type FromDiscord = null;
export type FrontendResult =
  | {
      ok: "success";
      data: FromFrontend;
    }
  | {
      ok: "err";
      data: FromFrontendErr;
    };
export type FromFrontend = {
  __type: "synced";
  details: SyncType;
};
export type SyncType =
  | {
      __sync_type: "chall";
      id: string;
    }
  | {
      __sync_type: "all_challs";
    }
  | {
      __sync_type: "user";
      id: string;
    }
  | {
      __sync_type: "all_users";
    }
  | {
      __sync_type: "team";
      id: string;
    }
  | {
      __sync_type: "all_teams";
    }
  | {
      __sync_type: "solves";
    }
  | {
      __sync_type: "all";
    };
export type FromFrontendErr =
  | {
      __type: "failed_to_sync";
      info: SyncType;
    }
  | {
      __type: "webhook_server_error";
      info: string;
    };
export type SqlResult =
  | {
      ok: "success";
      data: FromSql;
    }
  | {
      ok: "err";
      data: FromSqlErr;
    };
export type FromSql =
  | {
      __type: "chall";
      data: Chall;
    }
  | {
      __type: "chall_arr";
      data: Chall[];
    }
  | {
      __type: "team";
      data: Team;
    }
  | {
      __type: "team_arr";
      data: Team[];
    }
  | {
      __type: "team_score_history_array";
      data: ScoreEntry[];
    }
  | {
      __type: "user";
      data: User;
    }
  | {
      __type: "user_arr";
      data: User[];
    }
  | {
      __type: "solve";
      data: Solve;
    }
  | {
      __type: "solve_arr";
      data: Solve[];
    }
  | {
      __type: "availability";
      data: boolean;
    }
  | {
      __type: "auth_status";
      data: boolean;
    };
export type CiText = string;
export type FromSqlErr =
  | ("DatabaseError" | "Auth")
  | {
      OtherServerError: string;
    }
  | {
      DoesNotExist: string;
    }
  | {
      NameDoesNotExist: string;
    }
  | {
      NameIsTaken: string;
    }
  | {
      /**
       * @minItems 2
       * @maxItems 2
       */
      RequestTooBig: [number, number];
    };

export interface Outgoing {
  deploy?: DeployResult | null;
  discord?: DiscordResult | null;
  frontend?: FrontendResult | null;
  sql?: SqlResult | null;
}
export interface DeploymentStatus {
  status: Status;
  status_time: Duration;
  chall_name?: string | null;
  poll_id: string;
  err_msg?: string | null;
}
export interface Duration {
  secs: number;
  nanos: number;
}
export interface FromDiscordErr {
  status_code: number;
  status_message: string;
  body: number[];
}
export interface Chall {
  id: string;
  name: CiText;
  description: string;
  points: number;
  authors: string[];
  hints: string[];
  categories: string[];
  tags: string[];
  solve_count: number;
  visible: boolean;
  source_folder: string;
  links: Links;
}
export interface Links {
  nc: string[];
  web: string[];
  admin: string[];
  static: string[];
}
export interface Team {
  id: string;
  name: CiText;
  score: number;
  last_solve?: number | null;
  eligible: boolean;
  affiliation?: string | null;
}
export interface ScoreEntry {
  team_id: string;
  score: number;
  time: string;
}
export interface User {
  id: string;
  email: CiText;
  name: CiText;
  team_id?: string | null;
  score: number;
  last_solve?: number | null;
  eligible: boolean;
  admin: boolean;
}
export interface Solve {
  id: string;
  user_id: string;
  team_id: string;
  chall_id: string;
  correct: boolean;
  counted: boolean;
  time: number;
}
